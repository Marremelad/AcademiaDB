// <auto-generated />
using System;
using AcademiaDB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcademiaDB.Migrations
{
    [DbContext(typeof(AcademiaContext))]
    [Migration("20250105144544_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcademiaDB.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int>("EmployeeIdFk")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID_FK");

                    b.HasKey("ClassId")
                        .HasName("PK__Classes__CB1927A062ADE826");

                    b.HasIndex("EmployeeIdFk");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("AcademiaDB.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__C92D718724BF5B27");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("AcademiaDB.Models.CourseAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssignmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<int>("CourseIdFk")
                        .HasColumnType("int")
                        .HasColumnName("CourseID_FK");

                    b.Property<int>("EmployeeIdFk")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID_FK");

                    b.HasKey("AssignmentId")
                        .HasName("PK__CourseAs__32499E57F6BC71B4");

                    b.HasIndex("CourseIdFk");

                    b.HasIndex("EmployeeIdFk");

                    b.ToTable("CourseAssignments");
                });

            modelBuilder.Entity("AcademiaDB.Models.CourseEnrolment", b =>
                {
                    b.Property<int>("EnrolmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EnrolmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrolmentId"));

                    b.Property<int>("CourseIdFk")
                        .HasColumnType("int")
                        .HasColumnName("CourseID_FK");

                    b.Property<string>("Grade")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("GradeSetterFk")
                        .HasColumnType("int")
                        .HasColumnName("GradeSetter_FK");

                    b.Property<DateOnly?>("GradingDate")
                        .HasColumnType("date");

                    b.Property<int>("StudentIdFk")
                        .HasColumnType("int")
                        .HasColumnName("StudentID_FK");

                    b.HasKey("EnrolmentId")
                        .HasName("PK__CourseEn__5C0E5FEF3B22BD9F");

                    b.HasIndex("CourseIdFk");

                    b.HasIndex("GradeSetterFk");

                    b.HasIndex("StudentIdFk");

                    b.ToTable("CourseEnrolments", t =>
                        {
                            t.HasTrigger("trg_PreventInvalidGradeSetter");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("AcademiaDB.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BCD65F30F76");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AcademiaDB.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("DepartmentIdFk")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID_FK");

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<decimal>("EmployeeSalary")
                        .HasColumnType("money");

                    b.Property<string>("EmployeeSsn")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("EmployeeSSN")
                        .IsFixedLength();

                    b.Property<DateOnly>("EmployeeStartDate")
                        .HasColumnType("date");

                    b.Property<int>("RoleIdFk")
                        .HasColumnType("int")
                        .HasColumnName("RoleID_FK");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF1F9A331FA");

                    b.HasIndex("DepartmentIdFk");

                    b.HasIndex("RoleIdFk");

                    b.ToTable("Employees", t =>
                        {
                            t.HasTrigger("trg_ValidateEmployeeRole");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("AcademiaDB.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<int>("DepartmentIdFk")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID_FK");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3A367B7819");

                    b.HasIndex("DepartmentIdFk");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AcademiaDB.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("ClassIdFk")
                        .HasColumnType("int")
                        .HasColumnName("ClassID_FK");

                    b.Property<string>("StudentFirstName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("StudentLastName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("StudentSsn")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("StudentSSN");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52A79434FC887");

                    b.HasIndex("ClassIdFk");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AcademiaDB.Models.TopGrade", b =>
                {
                    b.Property<string>("Grade")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(71)
                        .HasColumnType("nvarchar(71)");

                    b.ToTable((string)null);

                    b.ToView("TopGrades", (string)null);
                });

            modelBuilder.Entity("AcademiaDB.Models.Class", b =>
                {
                    b.HasOne("AcademiaDB.Models.Employee", "EmployeeIdFkNavigation")
                        .WithMany("Classes")
                        .HasForeignKey("EmployeeIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__Classes__Employe__2D27B809");

                    b.Navigation("EmployeeIdFkNavigation");
                });

            modelBuilder.Entity("AcademiaDB.Models.CourseAssignment", b =>
                {
                    b.HasOne("AcademiaDB.Models.Course", "CourseIdFkNavigation")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("CourseIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__CourseAss__Cours__3B75D760");

                    b.HasOne("AcademiaDB.Models.Employee", "EmployeeIdFkNavigation")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("EmployeeIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__CourseAss__Emplo__3A81B327");

                    b.Navigation("CourseIdFkNavigation");

                    b.Navigation("EmployeeIdFkNavigation");
                });

            modelBuilder.Entity("AcademiaDB.Models.CourseEnrolment", b =>
                {
                    b.HasOne("AcademiaDB.Models.Course", "CourseIdFkNavigation")
                        .WithMany("CourseEnrolments")
                        .HasForeignKey("CourseIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__CourseEnr__Cours__36B12243");

                    b.HasOne("AcademiaDB.Models.Employee", "GradeSetterFkNavigation")
                        .WithMany("CourseEnrolments")
                        .HasForeignKey("GradeSetterFk")
                        .HasConstraintName("FK__CourseEnr__Grade__37A5467C");

                    b.HasOne("AcademiaDB.Models.Student", "StudentIdFkNavigation")
                        .WithMany("CourseEnrolments")
                        .HasForeignKey("StudentIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__CourseEnr__Gradi__35BCFE0A");

                    b.Navigation("CourseIdFkNavigation");

                    b.Navigation("GradeSetterFkNavigation");

                    b.Navigation("StudentIdFkNavigation");
                });

            modelBuilder.Entity("AcademiaDB.Models.Employee", b =>
                {
                    b.HasOne("AcademiaDB.Models.Department", "DepartmentIdFkNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__Employees__Depar__29572725");

                    b.HasOne("AcademiaDB.Models.Role", "RoleIdFkNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("RoleIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__Employees__RoleI__2A4B4B5E");

                    b.Navigation("DepartmentIdFkNavigation");

                    b.Navigation("RoleIdFkNavigation");
                });

            modelBuilder.Entity("AcademiaDB.Models.Role", b =>
                {
                    b.HasOne("AcademiaDB.Models.Department", "DepartmentIdFkNavigation")
                        .WithMany("Roles")
                        .HasForeignKey("DepartmentIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__Roles__Departmen__267ABA7A");

                    b.Navigation("DepartmentIdFkNavigation");
                });

            modelBuilder.Entity("AcademiaDB.Models.Student", b =>
                {
                    b.HasOne("AcademiaDB.Models.Class", "ClassIdFkNavigation")
                        .WithMany("Students")
                        .HasForeignKey("ClassIdFk")
                        .IsRequired()
                        .HasConstraintName("FK__Students__ClassI__300424B4");

                    b.Navigation("ClassIdFkNavigation");
                });

            modelBuilder.Entity("AcademiaDB.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("AcademiaDB.Models.Course", b =>
                {
                    b.Navigation("CourseAssignments");

                    b.Navigation("CourseEnrolments");
                });

            modelBuilder.Entity("AcademiaDB.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("AcademiaDB.Models.Employee", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("CourseAssignments");

                    b.Navigation("CourseEnrolments");
                });

            modelBuilder.Entity("AcademiaDB.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("AcademiaDB.Models.Student", b =>
                {
                    b.Navigation("CourseEnrolments");
                });
#pragma warning restore 612, 618
        }
    }
}
